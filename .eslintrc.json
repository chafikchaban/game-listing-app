{
    "$schema": "https://json.schemastore.org/eslintrc",
    "root": true,
    "extends": "@react-native",
    "plugins": [
      "jest",
      "simple-import-sort"
    ],
    "rules": {
      "prettier/prettier": "off",
      "array-bracket-newline": ["error", {
        "multiline": true
      }],
      "array-element-newline": ["error", "consistent"],
      
      "brace-style": "off",
      "@typescript-eslint/brace-style": "error",
  
      "comma-dangle": "off",
      "@typescript-eslint/comma-dangle": ["error", {
        "arrays": "always-multiline",
        "objects": "always-multiline",
        "imports": "always-multiline",
        "exports": "always-multiline",
        "functions": "always-multiline"
      }],
      
      "comma-spacing": "off",
      "@typescript-eslint/comma-spacing": "error",
  
      "function-paren-newline": ["error", "multiline"],
   
      "indent": "off",
      "@typescript-eslint/indent": ["error", 2],
      "react/jsx-indent-props": ["error", 2],
  
      "jest/consistent-test-it": ["error", {
        "fn": "it"
      }],
      "jest/max-nested-describe": ["error", {
        "max": 1
      }],
      "jest/no-alias-methods": "error",
      "jest/no-commented-out-tests": "error",
      "jest/no-conditional-expect": "error",
      "jest/no-conditional-in-test": "error",
      "jest/no-disabled-tests": "error",
      "jest/no-done-callback": "error",
      "jest/no-duplicate-hooks": "error",
      "jest/no-export": "error",
      "jest/no-focused-tests": "error",
      "jest/no-test-return-statement": "error",
      "jest/prefer-comparison-matcher": "error",
      "jest/prefer-equality-matcher": "error",
      "jest/prefer-hooks-on-top": "error",
      "jest/prefer-lowercase-title": ["error", {
        "ignore": ["describe"]
      }],
      "jest/valid-describe-callback": "error",
      "jest/valid-expect-in-promise": "error",
      "jest/valid-expect": "error",
      "jest/valid-title": "error",
  
      "jsx-quotes": ["error", "prefer-single"],
  
      "key-spacing": "error",
  
      "keyword-spacing": "off",
      "@typescript-eslint/keyword-spacing": ["error", {
        "before": true
      }],
  
      "lines-between-class-members": "off",
  
      "@typescript-eslint/lines-between-class-members": ["error", "always", {
        "exceptAfterSingleLine": true
      }],
  
      "no-duplicate-imports": "off",
      "@typescript-eslint/no-duplicate-imports": "error",
  
      "no-fallthrough": "off",
      "no-multi-spaces": "error",
      "no-multiple-empty-lines": ["error", {
        "max": 1,
        "maxBOF": 0,
        "maxEOF": 1
      }],
  
      "no-shadow": "off",
      "@typescript-eslint/no-shadow": "error",
  
      "no-var": "error",
      
      "object-curly-spacing": "off",
      "@typescript-eslint/object-curly-spacing": ["error", "always"],
  
      "padding-line-between-statements": "off",
      "@typescript-eslint/padding-line-between-statements": [
        "error",
        {
          "blankLine": "always",
          "prev": "import",
          "next": "*"
        },
        {
          "blankLine": "any",
          "prev": "import",
          "next": "import"
        },
        {
          "blankLine": "always",
          "prev": [
            "type",
            "interface"
          ],
          "next": "*"
        },
        {
          "blankLine": "always",
          "prev": [
            "case",
            "default"
          ],
          "next": "*"
        },
        {
          "blankLine": "always",
          "prev": "*",
          "next": [
            "return",
            "throw"
          ]
        }
      ],
  
      "prefer-const": "error",
      "@typescript-eslint/prefer-enum-initializers": "error",
  
      "semi": "off",
      "@typescript-eslint/semi": ["error", "always"],
  
      "space-infix-ops": "off",
      "@typescript-eslint/space-infix-ops": "error",
      
      "space-in-parens": ["error", "never"],
      "space-unary-ops": "error",
  
      "react/function-component-definition": ["error", {
        "namedComponents": "arrow-function",
        "unnamedComponents": "arrow-function"
      }],
      "react/jsx-closing-bracket-location": ["error", {
        "nonEmpty": "after-props",
        "selfClosing": "tag-aligned"
      }],
      "react/jsx-curly-brace-presence": [ "warn", {
        "props": "never", 
        "children": "always", 
        "propElementValues": "always"
      }],
      "react/jsx-first-prop-new-line": ["error", "multiline"],
      "react/jsx-newline": ["error", {
        "prevent": true
      }],
      "react/jsx-no-literals": ["warn", {
        "ignoreProps": true,
        "noStrings": true
      }],
      "react/jsx-no-useless-fragment": ["error", {
        "allowExpressions": true
      }],
      "react/jsx-max-props-per-line": ["error", {
        "maximum": 1,
        "when": "always"
      }],
      "react/jsx-one-expression-per-line": "error",
      "react/no-string-refs": ["error", {
        "noTemplateLiterals": true
      }],
      "react/jsx-props-no-multi-spaces": "error",
      "react/jsx-wrap-multilines": ["error", {
        "arrow": "parens-new-line",
        "assignment": "parens-new-line",
        "condition": "parens-new-line",
        "declaration": "parens-new-line",
        "logical": "parens-new-line",
        "prop": "ignore",
        "return": "parens"
      }],
      "react-hooks/exhaustive-deps": "off",
      "react-hooks/rules-of-hooks": "warn",
      "simple-import-sort/imports": ["error", {
        "groups": [
          [
            "^react$",
            "^react-native$",
            "react",
            "^@?\\w",
            "^\\u0000"
          ],
          [
            "^@arch",
            "^@app",
            "^@di",
            "^@service",
            "^@model",
            "^@scenes",
            "^@sb",
            "^@components",
            "^@animation",
            "^@assets"
          ],
          [
            "^\\."
          ]
        ]
      }],
  
      "@typescript-eslint/consistent-indexed-object-style": "error",
      "@typescript-eslint/explicit-function-return-type": ["error", {
        "allowExpressions": true
      }],
      "@typescript-eslint/member-delimiter-style": "error",
      "@typescript-eslint/naming-convention": [
        "error",
        {
          "selector": "typeLike",
          "format": ["PascalCase"]
        },
        {
          "selector": "enumMember",
          "format": ["UPPER_CASE"]
        },
        {
          "selector": [
            "method",
            "property"
          ],
          "format": ["camelCase"]
        },
        {
          "selector": "classProperty",
          "modifiers": ["static"],
          "format": ["UPPER_CASE"],
          "filter": {
            "regex": "^defaultProps$",
            "match": false
          }
        },
        {
          "selector": [
            "objectLiteralProperty",
            "objectLiteralMethod",
            "typeProperty"
          ],
          "format": null
        },
        {
          "selector": "parameter",
          "modifiers": ["unused"],
          "format": null,
          "leadingUnderscore": "require"
        }
      ],
  
      "@typescript-eslint/explicit-member-accessibility": ["error", {
        "accessibility": "explicit",
        "overrides": {
          "constructors": "no-public"
        }
      }],
      "@typescript-eslint/method-signature-style": ["error", "method"],
      "@typescript-eslint/no-empty-function": "error",
      "@typescript-eslint/no-useless-constructor": "error",
      "@typescript-eslint/prefer-optional-chain": "error",
      "@typescript-eslint/type-annotation-spacing": "error"
    },
    "globals": {
      "Falsy": "readonly",
      "Displayable": "readonly",
      "Comparable": "readonly",
      "Override": "readonly",
      "LiteralUnion": "readonly"
    }
  }